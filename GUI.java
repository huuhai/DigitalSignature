/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.chungthucdientu.digital_signature;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author huuha
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        this.setTitle("Demo Digital Signature");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    CreateKey createKey = new CreateKey();
    JFileChooser jFileChooser = new JFileChooser();
    byte[] byteDigitalSignature;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCbb_lengthKey = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_showPrivateKey = new javax.swing.JTextArea();
        jBtn_savePrivateKey = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_showPublicKey = new javax.swing.JTextArea();
        jBtn_savePublicKey = new javax.swing.JButton();
        jBtn_createKey = new javax.swing.JButton();
        jBtn_resetTabCreateKey = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField_locationFileNeedSignature = new javax.swing.JTextField();
        jBtn_choiceFileNeedSignature = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea_showPrivateKeyFile = new javax.swing.JTextArea();
        jBtn_choicePrivateKey = new javax.swing.JButton();
        jTextField_locationPrivateKey = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_showDigitalSignature = new javax.swing.JTextArea();
        jBtn_saveDigitalSignature = new javax.swing.JButton();
        jBtn_createDigitalSignature = new javax.swing.JButton();
        jBtn_resetTabDigitalSignature = new javax.swing.JButton();
        jCbb_choiceAlgorithmForSignature = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField_locationFileNeedCheck = new javax.swing.JTextField();
        jBtn_choiceFileForCheck = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jTextField_locationPublicKey = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_showPublicKeyFile = new javax.swing.JTextArea();
        jBtn_choicePublicKey = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jTextField_locationDigitalSignature = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea_showDigitalSignatureFile = new javax.swing.JTextArea();
        jBtn_choiceDigitalSignature = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCbb_choiceAlgorithmForCheck = new javax.swing.JComboBox<>();
        jBtn_resetTabCheck = new javax.swing.JButton();
        jBtn_checkIntegrity = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Chiều dài khóa");

        jCbb_lengthKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512", "1024", "2048", "3072" }));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Khóa bí mật"));

        jTextArea_showPrivateKey.setColumns(20);
        jTextArea_showPrivateKey.setRows(5);
        jScrollPane1.setViewportView(jTextArea_showPrivateKey);

        jBtn_savePrivateKey.setText("Lưu khóa");
        jBtn_savePrivateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_savePrivateKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_savePrivateKey)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtn_savePrivateKey)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Khóa công khai"));

        jTextArea_showPublicKey.setColumns(20);
        jTextArea_showPublicKey.setRows(5);
        jScrollPane2.setViewportView(jTextArea_showPublicKey);

        jBtn_savePublicKey.setText("Lưu khóa");
        jBtn_savePublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_savePublicKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_savePublicKey)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtn_savePublicKey)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtn_createKey.setText("Tạo khóa");
        jBtn_createKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_createKeyActionPerformed(evt);
            }
        });

        jBtn_resetTabCreateKey.setText("Xóa");
        jBtn_resetTabCreateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_resetTabCreateKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jCbb_lengthKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(309, 309, 309))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jBtn_createKey)
                                .addGap(18, 18, 18)
                                .addComponent(jBtn_resetTabCreateKey))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbb_lengthKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_createKey)
                    .addComponent(jBtn_resetTabCreateKey))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tạo khóa", jPanel1);

        jBtn_choiceFileNeedSignature.setText("Chọn file");
        jBtn_choiceFileNeedSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_choiceFileNeedSignatureActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Chọn khóa bí mật"));

        jTextArea_showPrivateKeyFile.setColumns(20);
        jTextArea_showPrivateKeyFile.setRows(5);
        jScrollPane3.setViewportView(jTextArea_showPrivateKeyFile);

        jBtn_choicePrivateKey.setText("Chọn khóa bí mật");
        jBtn_choicePrivateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_choicePrivateKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_locationPrivateKey)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_choicePrivateKey)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField_locationPrivateKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtn_choicePrivateKey)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Chữ ký số"));

        jTextArea_showDigitalSignature.setColumns(20);
        jTextArea_showDigitalSignature.setRows(5);
        jScrollPane4.setViewportView(jTextArea_showDigitalSignature);

        jBtn_saveDigitalSignature.setText("Lưu chữ ký số");
        jBtn_saveDigitalSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_saveDigitalSignatureActionPerformed(evt);
            }
        });

        jBtn_createDigitalSignature.setText("Tạo chữ ký số");
        jBtn_createDigitalSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_createDigitalSignatureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_createDigitalSignature)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_saveDigitalSignature)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_saveDigitalSignature)
                    .addComponent(jBtn_createDigitalSignature))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtn_resetTabDigitalSignature.setText("Xóa");
        jBtn_resetTabDigitalSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_resetTabDigitalSignatureActionPerformed(evt);
            }
        });

        jCbb_choiceAlgorithmForSignature.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SHA1WithRSA", "SHA256WithRSA", "SHA384WithRSA", "SHA512WithRSA" }));

        jLabel3.setText("Chọn thuật toán");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField_locationFileNeedSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbb_choiceAlgorithmForSignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtn_choiceFileNeedSignature)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBtn_resetTabDigitalSignature)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(195, 195, 195))
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_locationFileNeedSignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn_choiceFileNeedSignature))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbb_choiceAlgorithmForSignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jBtn_resetTabDigitalSignature)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Ký số", jPanel2);

        jPanel3.setLayout(null);
        jPanel3.add(jTextField_locationFileNeedCheck);
        jTextField_locationFileNeedCheck.setBounds(45, 32, 461, 20);

        jBtn_choiceFileForCheck.setText("Chọn file");
        jBtn_choiceFileForCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_choiceFileForCheckActionPerformed(evt);
            }
        });
        jPanel3.add(jBtn_choiceFileForCheck);
        jBtn_choiceFileForCheck.setBounds(524, 31, 75, 23);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Chọn khóa công khai"));

        jTextArea_showPublicKeyFile.setColumns(20);
        jTextArea_showPublicKeyFile.setRows(5);
        jScrollPane5.setViewportView(jTextArea_showPublicKeyFile);

        jBtn_choicePublicKey.setText("Chọn khóa công khai");
        jBtn_choicePublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_choicePublicKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_locationPublicKey)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_choicePublicKey)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField_locationPublicKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtn_choicePublicKey)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel8);
        jPanel8.setBounds(45, 121, 307, 220);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Chọn chữ ký số"));

        jTextArea_showDigitalSignatureFile.setColumns(20);
        jTextArea_showDigitalSignatureFile.setRows(5);
        jScrollPane6.setViewportView(jTextArea_showDigitalSignatureFile);

        jBtn_choiceDigitalSignature.setText("Chọn chữ ký");
        jBtn_choiceDigitalSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_choiceDigitalSignatureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_locationDigitalSignature)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_choiceDigitalSignature)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField_locationDigitalSignature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBtn_choiceDigitalSignature)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel9);
        jPanel9.setBounds(380, 121, 307, 220);

        jLabel4.setText("Chọn thuật toán");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(380, 86, 126, 14);

        jCbb_choiceAlgorithmForCheck.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SHA1WithRSA", "SHA256WithRSA", "SHA384WithRSA", "SHA512WithRSA" }));
        jPanel3.add(jCbb_choiceAlgorithmForCheck);
        jCbb_choiceAlgorithmForCheck.setBounds(524, 83, 105, 20);

        jBtn_resetTabCheck.setText("Xóa");
        jBtn_resetTabCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_resetTabCheckActionPerformed(evt);
            }
        });
        jPanel3.add(jBtn_resetTabCheck);
        jBtn_resetTabCheck.setBounds(636, 359, 51, 23);

        jBtn_checkIntegrity.setText("Kiểm tra");
        jBtn_checkIntegrity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_checkIntegrityActionPerformed(evt);
            }
        });
        jPanel3.add(jBtn_checkIntegrity);
        jBtn_checkIntegrity.setBounds(547, 359, 71, 23);

        jTabbedPane1.addTab("Kiểm tra", jPanel3);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Copyright © 2019 AT12E - nhóm 14 Corporation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_createKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_createKeyActionPerformed
        // TODO add your handling code here:
        String lengthKey = jCbb_lengthKey.getSelectedItem().toString();
        int valueLengthKey = Integer.parseInt(lengthKey);

        createKey.createKeyPair(valueLengthKey);

        // hiển thị cặp khóa ở dạng nhị phân lên giao diện (byte[] to String)
        jTextArea_showPrivateKey.setText(new String(createKey.getPrivateKey().getEncoded()));
        jTextArea_showPublicKey.setText(new String(createKey.getPublicKey().getEncoded()));

        jTextArea_showPrivateKey.setLineWrap(true);
        jTextArea_showPublicKey.setLineWrap(true);

        jTextArea_showPrivateKey.setEditable(false);
        jTextArea_showPublicKey.setEditable(false);
    }//GEN-LAST:event_jBtn_createKeyActionPerformed

    private void jBtn_savePrivateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_savePrivateKeyActionPerformed
        // TODO add your handling code here:
        String privateKey = jTextArea_showPrivateKey.getText();

        if (privateKey.equals("")) {
            JOptionPane.showMessageDialog(null, "Không thể lưu. Chưa tạo khóa bí mật !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
//            outputWriteFile(getSaveLocation(), valuePrivateKey, "privateKey.txt");
            saveKeyToFile(createKey.getPrivateKey().getEncoded());
        }
    }//GEN-LAST:event_jBtn_savePrivateKeyActionPerformed

    private void jBtn_savePublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_savePublicKeyActionPerformed
        // TODO add your handling code here:
        String publicKey = jTextArea_showPublicKey.getText();

        if (publicKey.equals("")) {
            JOptionPane.showMessageDialog(null, "Không thể lưu. Chưa tạo khóa công khai !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            saveKeyToFile(createKey.getPublicKey().getEncoded());
        }
    }//GEN-LAST:event_jBtn_savePublicKeyActionPerformed

    private void saveKeyToFile(byte[] valueKey) {

        int status = jFileChooser.showSaveDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {

            FileOutputStream fileOutputStream = null;

            try {

                File locationSaveFile = jFileChooser.getSelectedFile();
                System.out.println("Duong dan luu file: " + locationSaveFile);
                fileOutputStream = new FileOutputStream(locationSaveFile);
                DataOutputStream dataOutputStream = new DataOutputStream(fileOutputStream);
                dataOutputStream.write(valueKey);
                dataOutputStream.flush();
                dataOutputStream.close();
                JOptionPane.showMessageDialog(null, "Lưu khóa thành công !!!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileOutputStream.flush();
                    fileOutputStream.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (status == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(null, "Chưa lưu khóa !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void jBtn_resetTabCreateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_resetTabCreateKeyActionPerformed
        // TODO add your handling code here:
        jTextArea_showPrivateKey.setText("");
        jTextArea_showPublicKey.setText("");
        jCbb_lengthKey.setSelectedItem("512");
    }//GEN-LAST:event_jBtn_resetTabCreateKeyActionPerformed

    private void jBtn_choiceFileNeedSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_choiceFileNeedSignatureActionPerformed
        // TODO add your handling code here:
        jTextField_locationFileNeedSignature.setEditable(false);
        int status = jFileChooser.showOpenDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {
            File locationOpenFile = jFileChooser.getSelectedFile();
            jTextField_locationFileNeedSignature.setText(locationOpenFile.getPath());
            System.out.println("Duong dan file can ky so: " + locationOpenFile.getPath());

        } else if (status == JFileChooser.CANCEL_OPTION) {
            if (jTextField_locationFileNeedSignature.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn file !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtn_choiceFileNeedSignatureActionPerformed

    private void jBtn_choicePrivateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_choicePrivateKeyActionPerformed
        // TODO add your handling code here:
        jTextArea_showPrivateKeyFile.setEditable(false);
        jTextArea_showPrivateKeyFile.setLineWrap(true);
        int status = jFileChooser.showOpenDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {

            FileInputStream fis = null;
            try {
                File locationPrivateKeyFile = jFileChooser.getSelectedFile();
                fis = new FileInputStream(locationPrivateKeyFile);
                byte[] bytePrivateKey = new byte[fis.available()];
                fis.read(bytePrivateKey);
                jTextArea_showPrivateKeyFile.setText(new String(bytePrivateKey));
                System.out.println("Duong dan file privatekey: " + locationPrivateKeyFile.getPath());
                jTextField_locationPrivateKey.setText(locationPrivateKeyFile.getPath());

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (status == JFileChooser.CANCEL_OPTION) {
            if (jTextArea_showPrivateKeyFile.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn file privateKey !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtn_choicePrivateKeyActionPerformed

    private void jBtn_createDigitalSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_createDigitalSignatureActionPerformed
        // TODO add your handling code here:
        jTextArea_showDigitalSignature.setEditable(false);
        jTextArea_showDigitalSignature.setLineWrap(true);
        FileInputStream fis = null;

        if (jTextField_locationPrivateKey.getText().equals("") || jTextField_locationFileNeedSignature.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Không thể tạo chữ ký số !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                fis = new FileInputStream(jTextField_locationPrivateKey.getText());
                byte[] bytePrivateKey = new byte[fis.available()];
                fis.read(bytePrivateKey);

                fis = new FileInputStream(jTextField_locationFileNeedSignature.getText());
                byte[] byteFile = new byte[fis.available()];
                fis.read(byteFile);

                DigitalSignature digitalSignature = new DigitalSignature();
                byteDigitalSignature = digitalSignature.create(bytePrivateKey, byteFile, jCbb_choiceAlgorithmForSignature.getSelectedItem().toString());
                jTextArea_showDigitalSignature.setText(new String(byteDigitalSignature));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBtn_createDigitalSignatureActionPerformed

    private void jBtn_saveDigitalSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_saveDigitalSignatureActionPerformed
        // TODO add your handling code here:
        if (jTextArea_showDigitalSignature.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Không thể lưu. Chưa tạo chữ ký số !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } else {
//            saveDigitalSignatureToFile(jTextArea_showDigitalSignature.getText().getBytes());
            saveDigitalSignatureToFile(byteDigitalSignature);
        }
    }//GEN-LAST:event_jBtn_saveDigitalSignatureActionPerformed

    private void saveDigitalSignatureToFile(byte[] valueDigitalSignature) {

        int status = jFileChooser.showSaveDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {

            FileOutputStream fileOutputStream = null;

            try {

                File locationSaveFile = jFileChooser.getSelectedFile();
                System.out.println("Duong dan luu file: " + locationSaveFile);
                fileOutputStream = new FileOutputStream(locationSaveFile);
                DataOutputStream dataOutputStream = new DataOutputStream(fileOutputStream);
                dataOutputStream.write(valueDigitalSignature);
                dataOutputStream.flush();
                dataOutputStream.close();
                JOptionPane.showMessageDialog(null, "Lưu chữ ký thành công !!!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fileOutputStream.flush();
                    fileOutputStream.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (status == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(null, "Chưa lưu chữ ký !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void jBtn_resetTabDigitalSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_resetTabDigitalSignatureActionPerformed
        // TODO add your handling code here:
        jTextField_locationFileNeedSignature.setText("");
        jTextArea_showPrivateKeyFile.setText("");
        jTextArea_showDigitalSignature.setText("");
        jCbb_choiceAlgorithmForSignature.setSelectedItem("SHA1WithRSA");
        jTextField_locationPrivateKey.setText("");
    }//GEN-LAST:event_jBtn_resetTabDigitalSignatureActionPerformed

    private void jBtn_choiceFileForCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_choiceFileForCheckActionPerformed
        // TODO add your handling code here:
        jTextField_locationFileNeedCheck.setEditable(false);
        int status = jFileChooser.showOpenDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {
            File locationOpenFile = jFileChooser.getSelectedFile();
            jTextField_locationFileNeedCheck.setText(locationOpenFile.getPath());
            System.out.println("Duong dan file can kiem tra: " + locationOpenFile.getPath());

        } else if (status == JFileChooser.CANCEL_OPTION) {
            if (jTextField_locationFileNeedCheck.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn file !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtn_choiceFileForCheckActionPerformed

    private void jBtn_choicePublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_choicePublicKeyActionPerformed
        // TODO add your handling code here:
        jTextArea_showPublicKeyFile.setEditable(false);
        jTextArea_showPublicKeyFile.setLineWrap(true);
        int status = jFileChooser.showOpenDialog(this);

        if (status == JFileChooser.APPROVE_OPTION) {

            FileInputStream fis = null;
            try {
                File locationPublicKeyFile = jFileChooser.getSelectedFile();
                fis = new FileInputStream(locationPublicKeyFile);
                byte[] bytePublicKey = new byte[fis.available()];
                fis.read(bytePublicKey);

                System.out.println("Duong dan file publickey: " + locationPublicKeyFile.getPath());
                jTextField_locationPublicKey.setText(locationPublicKeyFile.getPath());
                jTextArea_showPublicKeyFile.setText(new String(bytePublicKey));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (status == JFileChooser.CANCEL_OPTION) {
            if (jTextField_locationPublicKey.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn file publicKey !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtn_choicePublicKeyActionPerformed

    private void jBtn_choiceDigitalSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_choiceDigitalSignatureActionPerformed
        // TODO add your handling code here:
        int status = jFileChooser.showOpenDialog(this);
        jTextArea_showDigitalSignatureFile.setEditable(false);
        jTextArea_showDigitalSignatureFile.setLineWrap(true);

        if (status == JFileChooser.APPROVE_OPTION) {

            FileInputStream fis = null;
            try {
                File locationDigitalSignature = jFileChooser.getSelectedFile();
                fis = new FileInputStream(locationDigitalSignature);
                byte[] byteDigitalSignature = new byte[fis.available()];
                fis.read(byteDigitalSignature);

                System.out.println("Duong dan file digital signature: " + locationDigitalSignature.getPath());
                jTextField_locationDigitalSignature.setText(locationDigitalSignature.getPath());
                jTextArea_showDigitalSignatureFile.setText(new String(byteDigitalSignature));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else if (status == JFileChooser.CANCEL_OPTION) {
            if (jTextField_locationDigitalSignature.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Chưa chọn file digital signature !!!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtn_choiceDigitalSignatureActionPerformed

    private void jBtn_checkIntegrityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_checkIntegrityActionPerformed
        // TODO add your handling code here:
        FileInputStream fis = null;
        FileInputStream fis2 = null;
        FileInputStream fis3 = null;
        if (jTextField_locationFileNeedCheck.getText().equals("") || jTextField_locationPublicKey.getText().equals("")
                || jTextField_locationDigitalSignature.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Không thể kiểm tra. Chưa điền đầy đủ dữ liệu !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);

        } else {
            try {

                fis = new FileInputStream(jTextField_locationPublicKey.getText());
                byte[] bytePublicKey = new byte[fis.available()];
                fis.read(bytePublicKey);

                fis2 = new FileInputStream(jTextField_locationFileNeedCheck.getText());
                byte[] byteFile = new byte[fis2.available()];
                fis2.read(byteFile);

                fis3 = new FileInputStream(jTextField_locationDigitalSignature.getText());
                byte[] byteDigitalSignature = new byte[fis3.available()];
                fis3.read(byteDigitalSignature);
                DigitalSignature digitalSignature = new DigitalSignature();
                //Check check = new Check();
                boolean result = digitalSignature.check(bytePublicKey, byteFile, byteDigitalSignature, jCbb_choiceAlgorithmForCheck.getSelectedItem().toString());
                if (result == true) {
                    JOptionPane.showMessageDialog(null, "Văn bản toàn vẹn không bị sửa đổi !!!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Văn bản không toàn vẹn !!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
                fis.close();
                fis2.close();
                fis3.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fis.close();
                    fis2.close();
                    fis3.close();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jBtn_checkIntegrityActionPerformed

    private void jBtn_resetTabCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_resetTabCheckActionPerformed
        // TODO add your handling code here:
        jTextField_locationFileNeedCheck.setText("");
        jTextField_locationPublicKey.setText("");
        jTextField_locationDigitalSignature.setText("");
        jTextArea_showPublicKeyFile.setText("");
        jTextArea_showDigitalSignatureFile.setText("");
        jCbb_choiceAlgorithmForCheck.setSelectedItem("SHA1WithRSA");
    }//GEN-LAST:event_jBtn_resetTabCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_checkIntegrity;
    private javax.swing.JButton jBtn_choiceDigitalSignature;
    private javax.swing.JButton jBtn_choiceFileForCheck;
    private javax.swing.JButton jBtn_choiceFileNeedSignature;
    private javax.swing.JButton jBtn_choicePrivateKey;
    private javax.swing.JButton jBtn_choicePublicKey;
    private javax.swing.JButton jBtn_createDigitalSignature;
    private javax.swing.JButton jBtn_createKey;
    private javax.swing.JButton jBtn_resetTabCheck;
    private javax.swing.JButton jBtn_resetTabCreateKey;
    private javax.swing.JButton jBtn_resetTabDigitalSignature;
    private javax.swing.JButton jBtn_saveDigitalSignature;
    private javax.swing.JButton jBtn_savePrivateKey;
    private javax.swing.JButton jBtn_savePublicKey;
    private javax.swing.JComboBox<String> jCbb_choiceAlgorithmForCheck;
    private javax.swing.JComboBox<String> jCbb_choiceAlgorithmForSignature;
    private javax.swing.JComboBox<String> jCbb_lengthKey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea_showDigitalSignature;
    private javax.swing.JTextArea jTextArea_showDigitalSignatureFile;
    private javax.swing.JTextArea jTextArea_showPrivateKey;
    private javax.swing.JTextArea jTextArea_showPrivateKeyFile;
    private javax.swing.JTextArea jTextArea_showPublicKey;
    private javax.swing.JTextArea jTextArea_showPublicKeyFile;
    private javax.swing.JTextField jTextField_locationDigitalSignature;
    private javax.swing.JTextField jTextField_locationFileNeedCheck;
    private javax.swing.JTextField jTextField_locationFileNeedSignature;
    private javax.swing.JTextField jTextField_locationPrivateKey;
    private javax.swing.JTextField jTextField_locationPublicKey;
    // End of variables declaration//GEN-END:variables
}
